{"version":3,"sources":["components/AddCategory.js","api/giphy.js","components/GifCategoryItem.js","components/GifCategoryGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","className","onSubmit","event","preventDefault","trim","categories","type","value","onChange","target","apiKey","baseUrl","getGifs","query","a","limit","url","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifCategoryItem","src","alt","GifCategoryGrid","category","loading","state","setState","useEffect","then","useFetchGifs","key","GifExpertApp","ReactDOM","render","document","getElementById"],"mappings":"0NAmCeA,EAhCK,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEHC,mBAAS,IAFN,mBAEhCC,EAFgC,KAEpBC,EAFoB,KAiBvC,OACI,0BAAMC,UAAU,OAAOC,SAVN,SAACC,GAClBA,EAAMC,iBAEoB,KAAtBL,EAAWM,SACXR,GAAc,SAACS,GAAD,OAAiBP,GAAjB,mBAAgCO,OAC9CN,EAAc,OAMd,2BACIO,KAAK,OACLC,MAAQT,EACRU,SAlBc,SAACN,GACvBH,EAAcG,EAAMO,OAAOF,Y,uBCP7BG,EAAS,mCACTC,EAAO,uCAEAC,EAAO,uCAAG,WAAMC,GAAN,qCAAAC,EAAA,6DAAaC,EAAb,+BAAqB,GAElCC,EAFa,UAEJL,EAFI,cAESE,EAFT,kBAEwBE,EAFxB,oBAEyCL,GAFzC,SAGAO,MAAMD,GAHN,cAGbE,EAHa,gBAIIA,EAAKC,OAJT,uBAIXC,EAJW,EAIXA,KAEFC,EAAOD,EAAKE,KAAI,SAACC,GAAS,IAAD,EAC3B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXT,IAAG,UAAEO,EAAIG,cAAN,aAAE,EAAYC,iBAAiBX,QAVvB,kBAcZK,GAdY,4CAAH,sDCeLO,EAfgB,SAAC,GAAuB,EAArBJ,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOT,EAAU,EAAVA,IACzC,OACI,yBAAKhB,UAAU,0DACX,yBAAK6B,IAAMb,EAAMc,IAAKL,IACtB,uBAAGzB,UAAU,QAASyB,KCuBnBM,EA1BS,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,ECFd,SAACA,GAAc,IAAD,EAEZnC,mBAAS,CAC/BuB,KAAM,GACNa,SAAS,IAJyB,mBAE/BC,EAF+B,KAExBC,EAFwB,KAiBtC,OAVAC,qBAAU,WAENxB,EAAQoB,GACHK,MAAK,SAAChB,GAAD,OAAUc,EAAS,CACrBf,KAAMC,EACNY,SAAS,SAGlB,CAAED,IAEEE,EDb2BI,CAAaN,GAAjCN,EAFwB,EAE9BN,KAAca,EAFgB,EAEhBA,QAEtB,OACI,oCACI,4BAAMD,GACJC,GAAW,yCACb,yBAAKjC,UAAU,aAEX0B,EAAOJ,KAAI,SAACC,GAAD,OACP,kBAAC,EAAD,eACIgB,IAAMhB,EAAIC,IACLD,UEQdiB,EArBM,WAAO,IAAD,EAEa3C,mBAAS,CAAC,cAFvB,mBAEhBQ,EAFgB,KAEJT,EAFI,KAIvB,OACI,oCACI,8CACA,kBAAC,EAAD,CAAaA,cAAgBA,IAC7B,wBAAII,UAAU,SAEVK,EAAWiB,KAAI,SAACU,GAAD,OACX,kBAAC,EAAD,CACIO,IAAMP,EACNA,SAAWA,S,YCVnCS,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.c425c3f2.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst AddCategory = ({ setCategories }) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = (event) => {\r\n        setInputValue(event.target.value);\r\n    }\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n\r\n        if (inputValue.trim() !== '') {\r\n            setCategories((categories) => [inputValue, ...categories]);\r\n            setInputValue('');   \r\n        }\r\n    }\r\n\r\n    return (\r\n        <form className=\"mb-5\" onSubmit={ handleSubmit }>\r\n            <input \r\n                type=\"text\" \r\n                value={ inputValue }\r\n                onChange={ handleInputChange }\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n};\r\n\r\nexport default AddCategory;\r\n","\r\nconst apiKey = 'BaqXs5y8EgtiqQmeYlAplCpxfgRgVCci';\r\nconst baseUrl  = `https://api.giphy.com/v1/gifs/search`;\r\n\r\nexport const getGifs = async(query, limit = 10) => {\r\n\r\n    const url = `${baseUrl}?q=${query}&limit=${limit}&api_key=${apiKey}`\r\n    const resp = await fetch(url);\r\n    const { data } = await resp.json();\r\n\r\n    const gifs = data.map((img) => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    });\r\n\r\n    return gifs;\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nexport const GifCategoryItem = ({ id, title, url }) => {\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn animate__slower\">\r\n            <img src={ url } alt={title} />\r\n            <p className=\"mb-5\">{ title }</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nGifCategoryItem.propTypes = {\r\n    id: PropTypes.string.isRequired,\r\n    title: PropTypes.string.isRequired,\r\n    url: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default GifCategoryItem;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport GifCategoryItem from './GifCategoryItem';\r\n\r\nconst GifCategoryGrid = ({ category }) => {\r\n\r\n    const { data: images, loading } = useFetchGifs(category);\r\n\r\n    return (\r\n        <>\r\n            <h3>{ category }</h3>\r\n            { loading && <p>Loading...</p> }\r\n            <div className=\"card-grid\">\r\n            {\r\n                images.map((img) => (\r\n                    <GifCategoryItem\r\n                        key={ img.id }\r\n                        { ...img }\r\n                    />\r\n                ))\r\n            }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nGifCategoryGrid.propTypes = {\r\n    category: PropTypes.string.isRequired\r\n};\r\n\r\nexport default GifCategoryGrid;\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGifs } from '../api/giphy';\r\n\r\nexport const useFetchGifs = (category) => {\r\n\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(() => {\r\n\r\n        getGifs(category)\r\n            .then((gifs) => setState({\r\n                data: gifs,\r\n                loading: false\r\n            }));\r\n\r\n    }, [ category]);\r\n\r\n    return state;\r\n}\r\n","import React, { useState } from 'react';\r\n\r\nimport AddCategory from './components/AddCategory';\r\nimport GifCategoryGrid from './components/GifCategoryGrid';\r\n\r\nconst GifExpertApp = () => {\r\n\r\n    const [categories, setCategories] = useState(['One Punch']);\r\n\r\n    return (\r\n        <>\r\n            <h1>Gif Expert App</h1>\r\n            <AddCategory setCategories={ setCategories } />\r\n            <hr className=\"mb-5\" />\r\n            {\r\n                categories.map((category) => (\r\n                    <GifCategoryGrid \r\n                        key={ category } \r\n                        category={ category } \r\n                    />\r\n                ))\r\n            }\r\n        </>\r\n    );\r\n}\r\n\r\nexport default GifExpertApp;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport GifExpertApp from './GifExpertApp'\n\nimport './index.css';\nimport './animate.min.css';\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}